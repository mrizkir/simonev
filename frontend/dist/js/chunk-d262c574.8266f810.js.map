{"version":3,"sources":["webpack:///../../../src/mixins/scrollable/index.ts","webpack:///../../../src/components/VAppBar/VAppBar.ts","webpack:///../../../src/components/VAppBar/VAppBarNavIcon.ts","webpack:///../../../src/directives/touch/index.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/mixins/mobile/index.ts","webpack:///../../../src/components/VNavigationDrawer/VNavigationDrawer.ts","webpack:///../../../src/directives/scroll/index.ts"],"names":["name","directives","Scroll","props","scrollTarget","scrollThreshold","String","Number","data","currentScroll","currentThreshold","isActive","isScrollingUp","previousScroll","savedScroll","target","computed","canScroll","window","computedScrollThreshold","this","watch","mounted","document","methods","onScroll","Math","thresholdMet","baseMixins","clippedLeft","clippedRight","collapseOnScroll","elevateOnScroll","fadeImgOnScroll","hideOnScroll","invertedScroll","scrollOffScreen","shrinkOnScroll","value","type","default","applicationProperty","classes","collapse","app","computedContentHeight","height","min","dense","max","difference","iteration","offset","computedFontSize","increment","computedLeft","$vuetify","application","computedMarginTop","computedOpacity","opacity","parseFloat","computedOriginalHeight","parseInt","computedRight","computedTransform","bottom","hideShadow","isCollapsed","isProminent","styles","fontSize","marginTop","transform","left","right","val","created","genBackground","render","_b","style","updateApplication","computedHeight","arg","functional","d","Object","staticClass","icon","on","listeners","defaultSlot","slots","h","handleGesture","wrapper","touchendY","dirRatio","minDistance","touchendX","touchstartX","touchstartY","touch","event","createHandlers","touchmoveX","touchmoveY","offsetX","offsetY","up","down","start","move","end","touchstart","e","touchend","touchmove","inserted","binding","el","options","passive","handlers","vnode","eventName","unbind","Touch","inset","Boolean","class","themeClasses","attrs","$listeners","$slots","mobileBreakpoint","breakpoint","validator","v","isNaN","includes","isMobile","mobile","mobileWidth","isNumber","width","$attrs","hasOwnProperty","ClickOutside","Resize","provide","isInNav","tag","clipped","disableResizeWatcher","disableRouteWatcher","expandOnHover","floating","miniVariant","miniVariantWidth","permanent","src","stateless","temporary","touchless","isMouseover","touchArea","stackMinZIndex","computedMaxHeight","computedTop","computedWidth","isMiniVariant","hasApp","isBottom","reactsToClick","reactsToMobile","reactsToResize","reactsToRoute","showOverlay","translate","top","maxHeight","$route","prev","removeOverlay","beforeMount","calculateTouchArea","parent","$el","parentRect","closeConditional","genAppend","genPosition","image","$scopedSlots","img","$createElement","genDirectives","handler","include","getOpenDependentElements","swipeRight","genListeners","transitionend","resizeEvent","slot","genPrepend","genContent","genBorder","init","onRouteChange","swipeLeft","updateMiniVariant","$emit","children","setBackgroundColor","self","undefined"],"mappings":"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","file":"js/chunk-d262c574.8266f810.js","sourcesContent":["// Directives\nimport { Scroll } from '../../directives'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\n/**\n * Scrollable\n *\n * Used for monitoring scrolling and\n * invoking functions based upon\n * scrolling thresholds being\n * met.\n */\n/* @vue/component */\nexport default Vue.extend({\n  name: 'scrollable',\n\n  directives: { Scroll },\n\n  props: {\n    scrollTarget: String,\n    scrollThreshold: [String, Number],\n  },\n\n  data: () => ({\n    currentScroll: 0,\n    currentThreshold: 0,\n    isActive: false,\n    isScrollingUp: false,\n    previousScroll: 0,\n    savedScroll: 0,\n    target: null as Element | null,\n  }),\n\n  computed: {\n    /**\n     * A computed property that returns\n     * whether scrolling features are\n     * enabled or disabled\n     */\n    canScroll (): boolean {\n      return typeof window !== 'undefined'\n    },\n    /**\n     * The threshold that must be met before\n     * thresholdMet function is invoked\n     */\n    computedScrollThreshold (): number {\n      return this.scrollThreshold\n        ? Number(this.scrollThreshold)\n        : 300\n    },\n  },\n\n  watch: {\n    isScrollingUp () {\n      this.savedScroll = this.savedScroll || this.currentScroll\n    },\n    isActive () {\n      this.savedScroll = 0\n    },\n  },\n\n  mounted () {\n    if (this.scrollTarget) {\n      this.target = document.querySelector(this.scrollTarget)\n\n      if (!this.target) {\n        consoleWarn(`Unable to locate element with identifier ${this.scrollTarget}`, this)\n      }\n    }\n  },\n\n  methods: {\n    onScroll () {\n      if (!this.canScroll) return\n\n      this.previousScroll = this.currentScroll\n      this.currentScroll = this.target\n        ? this.target.scrollTop\n        : window.pageYOffset\n\n      this.isScrollingUp = this.currentScroll < this.previousScroll\n      this.currentThreshold = Math.abs(this.currentScroll - this.computedScrollThreshold)\n\n      this.$nextTick(() => {\n        if (\n          Math.abs(this.currentScroll - this.savedScroll) >\n          this.computedScrollThreshold\n        ) this.thresholdMet()\n      })\n    },\n    /**\n     * The method invoked when\n     * scrolling in any direction\n     * has exceeded the threshold\n     */\n    thresholdMet () { /* noop */ },\n  },\n})\n","// Styles\nimport './VAppBar.sass'\n\n// Extensions\nimport VToolbar from '../VToolbar/VToolbar'\n\n// Directives\nimport Scroll from '../../directives/scroll'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Scrollable from '../../mixins/scrollable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  VToolbar,\n  Scrollable,\n  SSRBootable,\n  Toggleable,\n  Applicationable('top', [\n    'clippedLeft',\n    'clippedRight',\n    'computedHeight',\n    'invertedScroll',\n    'isExtended',\n    'isProminent',\n    'value',\n  ])\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n\n  directives: { Scroll },\n\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data () {\n    return {\n      isActive: this.value,\n    }\n  },\n\n  computed: {\n    applicationProperty (): string {\n      return !this.bottom ? 'top' : 'bottom'\n    },\n    canScroll (): boolean {\n      return (\n        Scrollable.options.computed.canScroll.call(this) &&\n        (\n          this.invertedScroll ||\n          this.elevateOnScroll ||\n          this.hideOnScroll ||\n          this.collapseOnScroll ||\n          this.isBooted ||\n          // If falsey, user has provided an\n          // explicit value which should\n          // overwrite anything we do\n          !this.value\n        )\n      )\n    },\n    classes (): object {\n      return {\n        ...VToolbar.options.computed.classes.call(this),\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll,\n      }\n    },\n    computedContentHeight (): number {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this)\n\n      const height = this.computedOriginalHeight\n\n      const min = this.dense ? 48 : 56\n      const max = height\n      const difference = max - min\n      const iteration = difference / this.computedScrollThreshold\n      const offset = this.currentScroll * iteration\n\n      return Math.max(min, max - offset)\n    },\n    computedFontSize (): number | undefined {\n      if (!this.isProminent) return undefined\n\n      const max = this.dense ? 96 : 128\n      const difference = max - this.computedContentHeight\n      const increment = 0.00347\n\n      // 1.5rem to a minimum of 1.25rem\n      return Number((1.50 - difference * increment).toFixed(2))\n    },\n    computedLeft (): number {\n      if (!this.app || this.clippedLeft) return 0\n\n      return this.$vuetify.application.left\n    },\n    computedMarginTop (): number {\n      if (!this.app) return 0\n\n      return this.$vuetify.application.bar\n    },\n    computedOpacity (): number | undefined {\n      if (!this.fadeImgOnScroll) return undefined\n\n      const opacity = Math.max(\n        (this.computedScrollThreshold - this.currentScroll) / this.computedScrollThreshold,\n        0\n      )\n\n      return Number(parseFloat(opacity).toFixed(2))\n    },\n    computedOriginalHeight (): number {\n      let height = VToolbar.options.computed.computedContentHeight.call(this)\n      if (this.isExtended) height += parseInt(this.extensionHeight)\n      return height\n    },\n    computedRight (): number {\n      if (!this.app || this.clippedRight) return 0\n\n      return this.$vuetify.application.right\n    },\n    computedScrollThreshold (): number {\n      if (this.scrollThreshold) return Number(this.scrollThreshold)\n\n      return this.computedOriginalHeight - (this.dense ? 48 : 56)\n    },\n    computedTransform (): number {\n      if (\n        !this.canScroll ||\n        (this.elevateOnScroll && this.currentScroll === 0 && this.isActive)\n      ) return 0\n\n      if (this.isActive) return 0\n\n      const scrollOffScreen = this.scrollOffScreen\n        ? this.computedHeight\n        : this.computedContentHeight\n\n      return this.bottom ? scrollOffScreen : -scrollOffScreen\n    },\n    hideShadow (): boolean {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 ||\n          this.computedTransform < 0\n      }\n\n      return (\n        !this.isExtended ||\n        this.scrollOffScreen\n      ) && this.computedTransform !== 0\n    },\n    isCollapsed (): boolean {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this)\n      }\n\n      return this.currentScroll > 0\n    },\n    isProminent (): boolean {\n      return (\n        VToolbar.options.computed.isProminent.call(this) ||\n        this.shrinkOnScroll\n      )\n    },\n    styles (): object {\n      return {\n        ...VToolbar.options.computed.styles.call(this),\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: `translateY(${convertToUnit(this.computedTransform)})`,\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight),\n      }\n    },\n  },\n\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform () {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (\n        !this.canScroll ||\n        (!this.clippedLeft && !this.clippedRight)\n      ) return\n\n      this.callUpdate()\n    },\n    invertedScroll (val: boolean) {\n      this.isActive = !val || this.currentScroll !== 0\n    },\n  },\n\n  created () {\n    if (this.invertedScroll) this.isActive = false\n  },\n\n  methods: {\n    genBackground () {\n      const render = VToolbar.options.methods.genBackground.call(this)\n\n      render.data = this._b(render.data || {}, render.tag!, {\n        style: { opacity: this.computedOpacity },\n      })\n\n      return render\n    },\n    updateApplication (): number {\n      return this.invertedScroll\n        ? 0\n        : this.computedHeight + this.computedTransform\n    },\n    thresholdMet () {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold\n        return\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp ||\n          this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return\n\n      this.savedScroll = this.currentScroll\n    },\n  },\n\n  render (h): VNode {\n    const render = VToolbar.options.render.call(this, h)\n\n    render.data = render.data || {}\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || []\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll,\n      })\n    }\n\n    return render\n  },\n})\n","// Components\nimport VIcon from '../VIcon'\nimport VBtn from '../VBtn/VBtn'\n\n// Types\nimport Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'v-app-bar-nav-icon',\n\n  functional: true,\n\n  render (h, { slots, listeners, props, data }) {\n    const d = Object.assign(data, {\n      staticClass: (`v-app-bar__nav-icon ${data.staticClass || ''}`).trim(),\n      props: {\n        ...props,\n        icon: true,\n      },\n      on: listeners,\n    })\n\n    const defaultSlot = slots().default\n\n    return h(VBtn, d, defaultSlot || [h(VIcon, '$menu')])\n  },\n})\n","import { VNodeDirective, VNode } from 'vue/types/vnode'\nimport { keys } from '../../util/helpers'\nimport { TouchHandlers, TouchValue, TouchWrapper } from 'vuetify/types'\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\ninterface TouchVNodeDirective extends VNodeDirective {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start &&\n    wrapper.start(Object.assign(event, wrapper))\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end &&\n    wrapper.end(Object.assign(event, wrapper))\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move && wrapper.move(Object.assign(event, wrapper))\n}\n\nfunction createHandlers (value: TouchHandlers): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const value = binding.value!\n  const target = value.parent ? el.parentElement : el\n  const options = value.options || { passive: true }\n\n  // Needed to pass unit tests\n  if (!target) return\n\n  const handlers = createHandlers(binding.value!)\n  target._touchHandlers = Object(target._touchHandlers)\n  target._touchHandlers![vnode.context!._uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName] as EventListener, options)\n  })\n}\n\nfunction unbind (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const target = binding.value!.parent ? el.parentElement : el\n  if (!target || !target._touchHandlers) return\n\n  const handlers = target._touchHandlers[vnode.context!._uid]\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n  delete target._touchHandlers[vnode.context!._uid]\n}\n\nexport const Touch = {\n  inserted,\n  unbind,\n}\n\nexport default Touch\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","// Types\nimport { BreakpointName } from 'vuetify/types/services/breakpoint'\nimport { deprecate } from '../../util/console'\nimport Vue, { PropType } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'mobile',\n\n  props: {\n    mobileBreakpoint: {\n      type: [Number, String] as PropType<number | BreakpointName>,\n      default (): number | BreakpointName | undefined {\n        // Avoid destroying unit\n        // tests for users\n        return this.$vuetify\n          ? this.$vuetify.breakpoint.mobileBreakpoint\n          : undefined\n      },\n      validator: v => (\n        !isNaN(Number(v)) ||\n        ['xs', 'sm', 'md', 'lg', 'xl'].includes(String(v))\n      ),\n    },\n  },\n\n  computed: {\n    isMobile (): boolean {\n      const {\n        mobile,\n        width,\n        name,\n        mobileBreakpoint,\n      } = this.$vuetify.breakpoint\n\n      // Check if local mobileBreakpoint matches\n      // the application's mobileBreakpoint\n      if (mobileBreakpoint === this.mobileBreakpoint) return mobile\n\n      const mobileWidth = parseInt(this.mobileBreakpoint, 10)\n      const isNumber = !isNaN(mobileWidth)\n\n      return isNumber\n        ? width < mobileWidth\n        : name === this.mobileBreakpoint\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('mobile-break-point')) {\n      deprecate('mobile-break-point', 'mobile-breakpoint', this)\n    }\n  },\n})\n","// Styles\nimport './VNavigationDrawer.sass'\n\n// Components\nimport VImg, { srcObject } from '../VImg/VImg'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Colorable from '../../mixins/colorable'\nimport Dependent from '../../mixins/dependent'\nimport Mobile from '../../mixins/mobile'\nimport Overlayable from '../../mixins/overlayable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport { convertToUnit, getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode, VNodeDirective, PropType } from 'vue'\nimport { TouchWrapper } from 'vuetify/types'\n\nconst baseMixins = mixins(\n  Applicationable('left', [\n    'isActive',\n    'isMobile',\n    'miniVariant',\n    'expandOnHover',\n    'permanent',\n    'right',\n    'temporary',\n    'width',\n  ]),\n  Colorable,\n  Dependent,\n  Mobile,\n  Overlayable,\n  SSRBootable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-navigation-drawer',\n\n  directives: {\n    ClickOutside,\n    Resize,\n    Touch,\n  },\n\n  provide (): object {\n    return {\n      isInNav: this.tag === 'nav',\n    }\n  },\n\n  props: {\n    bottom: Boolean,\n    clipped: Boolean,\n    disableResizeWatcher: Boolean,\n    disableRouteWatcher: Boolean,\n    expandOnHover: Boolean,\n    floating: Boolean,\n    height: {\n      type: [Number, String],\n      default (): string {\n        return this.app ? '100vh' : '100%'\n      },\n    },\n    miniVariant: Boolean,\n    miniVariantWidth: {\n      type: [Number, String],\n      default: 56,\n    },\n    permanent: Boolean,\n    right: Boolean,\n    src: {\n      type: [String, Object] as PropType<string | srcObject>,\n      default: '',\n    },\n    stateless: Boolean,\n    tag: {\n      type: String,\n      default (): string {\n        return this.app ? 'nav' : 'aside'\n      },\n    },\n    temporary: Boolean,\n    touchless: Boolean,\n    width: {\n      type: [Number, String],\n      default: 256,\n    },\n    value: null as unknown as PropType<any>,\n  },\n\n  data: () => ({\n    isMouseover: false,\n    touchArea: {\n      left: 0,\n      right: 0,\n    },\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    /**\n     * Used for setting an app value from a dynamic\n     * property. Called from applicationable.js\n     */\n    applicationProperty (): string {\n      return this.right ? 'right' : 'left'\n    },\n    classes (): object {\n      return {\n        'v-navigation-drawer': true,\n        'v-navigation-drawer--absolute': this.absolute,\n        'v-navigation-drawer--bottom': this.bottom,\n        'v-navigation-drawer--clipped': this.clipped,\n        'v-navigation-drawer--close': !this.isActive,\n        'v-navigation-drawer--fixed': !this.absolute && (this.app || this.fixed),\n        'v-navigation-drawer--floating': this.floating,\n        'v-navigation-drawer--is-mobile': this.isMobile,\n        'v-navigation-drawer--is-mouseover': this.isMouseover,\n        'v-navigation-drawer--mini-variant': this.isMiniVariant,\n        'v-navigation-drawer--custom-mini-variant': Number(this.miniVariantWidth) !== 56,\n        'v-navigation-drawer--open': this.isActive,\n        'v-navigation-drawer--open-on-hover': this.expandOnHover,\n        'v-navigation-drawer--right': this.right,\n        'v-navigation-drawer--temporary': this.temporary,\n        ...this.themeClasses,\n      }\n    },\n    computedMaxHeight (): number | null {\n      if (!this.hasApp) return null\n\n      const computedMaxHeight = (\n        this.$vuetify.application.bottom +\n        this.$vuetify.application.footer +\n        this.$vuetify.application.bar\n      )\n\n      if (!this.clipped) return computedMaxHeight\n\n      return computedMaxHeight + this.$vuetify.application.top\n    },\n    computedTop (): number {\n      if (!this.hasApp) return 0\n\n      let computedTop = this.$vuetify.application.bar\n\n      computedTop += this.clipped\n        ? this.$vuetify.application.top\n        : 0\n\n      return computedTop\n    },\n    computedTransform (): number {\n      if (this.isActive) return 0\n      if (this.isBottom) return 100\n      return this.right ? 100 : -100\n    },\n    computedWidth (): string | number {\n      return this.isMiniVariant ? this.miniVariantWidth : this.width\n    },\n    hasApp (): boolean {\n      return (\n        this.app &&\n        (!this.isMobile && !this.temporary)\n      )\n    },\n    isBottom (): boolean {\n      return this.bottom && this.isMobile\n    },\n    isMiniVariant (): boolean {\n      return (\n        !this.expandOnHover &&\n        this.miniVariant\n      ) || (\n        this.expandOnHover &&\n        !this.isMouseover\n      )\n    },\n    isMobile (): boolean {\n      return (\n        !this.stateless &&\n        !this.permanent &&\n        Mobile.options.computed.isMobile.call(this)\n      )\n    },\n    reactsToClick (): boolean {\n      return (\n        !this.stateless &&\n        !this.permanent &&\n        (this.isMobile || this.temporary)\n      )\n    },\n    reactsToMobile (): boolean {\n      return (\n        this.app &&\n        !this.disableResizeWatcher &&\n        !this.permanent &&\n        !this.stateless &&\n        !this.temporary\n      )\n    },\n    reactsToResize (): boolean {\n      return !this.disableResizeWatcher && !this.stateless\n    },\n    reactsToRoute (): boolean {\n      return (\n        !this.disableRouteWatcher &&\n        !this.stateless &&\n        (this.temporary || this.isMobile)\n      )\n    },\n    showOverlay (): boolean {\n      return (\n        !this.hideOverlay &&\n        this.isActive &&\n        (this.isMobile || this.temporary)\n      )\n    },\n    styles (): object {\n      const translate = this.isBottom ? 'translateY' : 'translateX'\n      return {\n        height: convertToUnit(this.height),\n        top: !this.isBottom ? convertToUnit(this.computedTop) : 'auto',\n        maxHeight: this.computedMaxHeight != null\n          ? `calc(100% - ${convertToUnit(this.computedMaxHeight)})`\n          : undefined,\n        transform: `${translate}(${convertToUnit(this.computedTransform, '%')})`,\n        width: convertToUnit(this.computedWidth),\n      }\n    },\n  },\n\n  watch: {\n    $route: 'onRouteChange',\n    isActive (val) {\n      this.$emit('input', val)\n    },\n    /**\n     * When mobile changes, adjust the active state\n     * only when there has been a previous value\n     */\n    isMobile (val, prev) {\n      !val &&\n        this.isActive &&\n        !this.temporary &&\n        this.removeOverlay()\n\n      if (prev == null ||\n        !this.reactsToResize ||\n        !this.reactsToMobile\n      ) return\n\n      this.isActive = !val\n    },\n    permanent (val) {\n      // If enabling prop enable the drawer\n      if (val) this.isActive = true\n    },\n    showOverlay (val) {\n      if (val) this.genOverlay()\n      else this.removeOverlay()\n    },\n    value (val) {\n      if (this.permanent) return\n\n      if (val == null) {\n        this.init()\n        return\n      }\n\n      if (val !== this.isActive) this.isActive = val\n    },\n    expandOnHover: 'updateMiniVariant',\n    isMouseover (val) {\n      this.updateMiniVariant(!val)\n    },\n  },\n\n  beforeMount () {\n    this.init()\n  },\n\n  methods: {\n    calculateTouchArea () {\n      const parent = this.$el.parentNode as Element\n\n      if (!parent) return\n\n      const parentRect = parent.getBoundingClientRect()\n\n      this.touchArea = {\n        left: parentRect.left + 50,\n        right: parentRect.right - 50,\n      }\n    },\n    closeConditional () {\n      return this.isActive && !this._isDestroyed && this.reactsToClick\n    },\n    genAppend () {\n      return this.genPosition('append')\n    },\n    genBackground () {\n      const props = {\n        height: '100%',\n        width: '100%',\n        src: this.src,\n      }\n\n      const image = this.$scopedSlots.img\n        ? this.$scopedSlots.img(props)\n        : this.$createElement(VImg, { props })\n\n      return this.$createElement('div', {\n        staticClass: 'v-navigation-drawer__image',\n      }, [image])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives = [{\n        name: 'click-outside',\n        value: {\n          handler: () => { this.isActive = false },\n          closeConditional: this.closeConditional,\n          include: this.getOpenDependentElements,\n        },\n      }]\n\n      if (!this.touchless && !this.stateless) {\n        directives.push({\n          name: 'touch',\n          value: {\n            parent: true,\n            left: this.swipeLeft,\n            right: this.swipeRight,\n          },\n        } as any)\n      }\n\n      return directives\n    },\n    genListeners () {\n      const on: Record<string, (e: Event) => void> = {\n        transitionend: (e: Event) => {\n          if (e.target !== e.currentTarget) return\n          this.$emit('transitionend', e)\n\n          // IE11 does not support new Event('resize')\n          const resizeEvent = document.createEvent('UIEvents')\n          resizeEvent.initUIEvent('resize', true, false, window, 0)\n          window.dispatchEvent(resizeEvent)\n        },\n      }\n\n      if (this.miniVariant) {\n        on.click = () => this.$emit('update:mini-variant', false)\n      }\n\n      if (this.expandOnHover) {\n        on.mouseenter = () => (this.isMouseover = true)\n        on.mouseleave = () => (this.isMouseover = false)\n      }\n\n      return on\n    },\n    genPosition (name: 'prepend' | 'append') {\n      const slot = getSlot(this, name)\n\n      if (!slot) return slot\n\n      return this.$createElement('div', {\n        staticClass: `v-navigation-drawer__${name}`,\n      }, slot)\n    },\n    genPrepend () {\n      return this.genPosition('prepend')\n    },\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-navigation-drawer__content',\n      }, this.$slots.default)\n    },\n    genBorder () {\n      return this.$createElement('div', {\n        staticClass: 'v-navigation-drawer__border',\n      })\n    },\n    init () {\n      if (this.permanent) {\n        this.isActive = true\n      } else if (this.stateless ||\n        this.value != null\n      ) {\n        this.isActive = this.value\n      } else if (!this.temporary) {\n        this.isActive = !this.isMobile\n      }\n    },\n    onRouteChange () {\n      if (this.reactsToRoute && this.closeConditional()) {\n        this.isActive = false\n      }\n    },\n    swipeLeft (e: TouchWrapper) {\n      if (this.isActive && this.right) return\n      this.calculateTouchArea()\n\n      if (Math.abs(e.touchendX - e.touchstartX) < 100) return\n      if (this.right &&\n        e.touchstartX >= this.touchArea.right\n      ) this.isActive = true\n      else if (!this.right && this.isActive) this.isActive = false\n    },\n    swipeRight (e: TouchWrapper) {\n      if (this.isActive && !this.right) return\n      this.calculateTouchArea()\n\n      if (Math.abs(e.touchendX - e.touchstartX) < 100) return\n      if (!this.right &&\n        e.touchstartX <= this.touchArea.left\n      ) this.isActive = true\n      else if (this.right && this.isActive) this.isActive = false\n    },\n    /**\n     * Update the application layout\n     */\n    updateApplication () {\n      if (\n        !this.isActive ||\n        this.isMobile ||\n        this.temporary ||\n        !this.$el\n      ) return 0\n\n      const width = Number(this.computedWidth)\n\n      return isNaN(width) ? this.$el.clientWidth : width\n    },\n    updateMiniVariant (val: boolean) {\n      if (this.miniVariant !== val) this.$emit('update:mini-variant', val)\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genPrepend(),\n      this.genContent(),\n      this.genAppend(),\n      this.genBorder(),\n    ]\n\n    if (this.src || getSlot(this, 'img')) children.unshift(this.genBackground())\n\n    return h(this.tag, this.setBackgroundColor(this.color, {\n      class: this.classes,\n      style: this.styles,\n      directives: this.genDirectives(),\n      on: this.genListeners(),\n    }), children)\n  },\n})\n","import { VNodeDirective } from 'vue/types/vnode'\nimport { DirectiveOptions } from 'vue'\n\ninterface ScrollVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value: EventListener | {\n    handler: EventListener\n    options?: boolean | AddEventListenerOptions\n  } | EventListenerObject & { options?: boolean | AddEventListenerOptions }\n  modifiers?: {\n    self?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: ScrollVNodeDirective) {\n  const { self = false } = binding.modifiers || {}\n  const value = binding.value\n  const options = (typeof value === 'object' && value.options) || { passive: true }\n  const handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler\n\n  const target = self\n    ? el\n    : binding.arg\n      ? document.querySelector(binding.arg)\n      : window\n\n  if (!target) return\n\n  target.addEventListener('scroll', handler, options)\n\n  el._onScroll = {\n    handler,\n    options,\n    // Don't reference self\n    target: self ? undefined : target,\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onScroll) return\n\n  const { handler, options, target = el } = el._onScroll\n\n  target.removeEventListener('scroll', handler, options)\n  delete el._onScroll\n}\n\nexport const Scroll = {\n  inserted,\n  unbind,\n} as DirectiveOptions\n\nexport default Scroll\n"],"sourceRoot":""}